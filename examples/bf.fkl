(import btk)
(load macro.fkl)

(if (le (length (argv)) 1)
  (begin
    (princ "No input file.\n" stdout)
    (exit 1)))

(define code
  (let* ((fp (open (nth 1 (argv))))
         (c (read fp)))
  (close fp)
  (str c)))

(define m #b00)

(let iter ((cp 0)
           (mp 0)
           (e #b00))
  (case (nth cp code)
    ((#\>) (ADDMP mp m))
    ((#\<) (SUBMP mp m))
    ((#\+) (ADDM mp m))
    ((#\-) (SUBM mp m))
    ((#\.) (princ (chr (nth mp m)) stdout))
    ((#\,) (setf (nth mp m) (byt (read stdin))))
    )
  )
