(load macro.fkl)
(define print princ)
;defun宏
(defmacro
  (defun $name $args,$body)
  ((lambda ()
     (define list (lambda ls ls))
     (list 'define name (cons 'lambda (cons args body))))))

;get the last element of a list
;(defun gle (objlist)
; (if (null (cdr objlist))
;  (car objlist)
;  (gle (cdr objlist))))

(define gle (lambda (objlist)
            (cond ((null (cdr objlist)) (car objlist))
                  (1 (gle (cdr objlist))))))
(define fact (lambda (n)
            (cond ((le n 1) n)
                  (1 (mul n (fact (sub n 1)))))))
(defun ael (objlist object)
 (defun tmpfun (objlist tmp)
  (if (null (cdr objlist))
   (cons (car objlist) tmp)
   (tmpfun (cdr objlist) (cons (car objlist) tmp))))
 (tmpfun (cons object (tmpfun objlist nil)) nil))
(defun ii (f x)
 (f x))
(defun printPair (x)
 (print "(" 1)
 (print (car x) 1)
 (print "," 1)
 (print (cdr x) 1)
 (print ")" 1))
(print (gle '(9 8 1)) 1)
(print "\n" 1)
(print (ael '(9 8 7) 6) 1)
(print "\n" 1)
(print "Hello,world!\n" 1)
(print "你好，世界！\n" 1)
(printPair (ii (lambda (x) (cons 9 x)) 8))
(print "\n" 1)
