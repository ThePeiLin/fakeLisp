(library
  fklc
  (export
    compile-i32
    compile-i64
    compile-char
    compile-symbol
    compile-f64
    compile-string
    compile-bytevector
    compile-big-int
    compile-integer
    compile-number
    make-push-nil
    compile-atom-literal
    compile-obj
    fbc->bytevector
    bytevector->fbc
    fbc?)
  (define fklc (dlopen (append (getdir) "/../fklc")))
  (define fbc? (dlsym fklc "fklc_fbc_p"))
  (define compile-i32 (dlsym fklc "fklc_compile_i32"))
  (define compile-i64 (dlsym fklc "fklc_compile_i64"))
  (define compile-char (dlsym fklc "fklc_compile_char"))
  (define compile-symbol (dlsym fklc "fklc_compile_symbol"))
  (define compile-f64 (dlsym fklc "fklc_compile_f64"))
  (define compile-string (dlsym fklc "fklc_compile_string"))
  (define compile-bytevector (dlsym fklc "fklc_compile_bytevector"))
  (define compile-big-int (dlsym fklc "fklc_compile_big_int"))
  (define compile-integer (dlsym fklc "fklc_compile_integer"))
  (define compile-number (dlsym fklc "fklc_compile_number"))
  (define make-push-nil (dlsym fklc "fklc_make_push_nil"))
  (define compile-atom-literal (dlsym fklc "fklc_compile_atom_literal"))
  (define compile-obj (dlsym fklc "fklc_compile_obj"))
  (define fbc->bytevector (dlsym fklc "fklc_fbc_to_bytevector"))
  (define bytevector->fbc (dlsym fklc "fklc_bytevector_to_fbc"))
  )
