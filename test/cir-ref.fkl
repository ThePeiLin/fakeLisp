(define i '(1,2))

(define b (cons i i))
(prin1n b)

(define b (list i i))
(prin1n b)

(car-set! i i)
(prin1n i)

(cdr-set! i i)
(prin1n i)

(define i '(1 2 3 4))
(nth-set! 2 i i)
(prin1n i)

(define j '(5 6 7 8))
(nthcdr-set! 3 j j)
(prin1n j)

(define b (list i j))
(prin1n b)

(println (stringify b))

(define f '(1 2 3 4 5 6 7 8))
(nth-set! 4 f f)
(nth-set! 7 f f)
(nth-set! 3 f j)
(prin1n f)

(define v #(1 2 3 4 5 6 7 8))
(vec-set! v 4 v)
(vec-set! v 7 v)
(vec-set! v 3 j)
(prin1n v)

(define vd #d(1 2 3 4 5 6 7 8))
(dvec-set! vd 4 vd)
(dvec-set! vd 7 vd)
(dvec-set! vd 3 v)
(prin1n vd)
