(import (.. lib utils))

(let []
  (println 'let))

(println (->> 1
              (- 2)
              (* 3)))

(println (-> 1
           (- 2)
           (* 3)))

(println (-> 1
           -
           /))

(println (->> 2
           -
           /))

(println `(~@`(1 2 3)
            ~@`(4)))

(println (append '(1 2 3)
                 '(4)))

(import (.. lib stack))
(define s (make-stack))

(println (stack? s)) ;;1

(println (stack? 1)) ;;()

(println (stack-empty? s)) ;;1

(stack-push! s 1)
(stack-push! s 2)

(println (stack-empty? s)) ;;()

(println (stack->list s)) ;;(2 1)

(println (stack-pop! s)) ;;2

(println (stack-pop! s)) ;;1

(println (stack-empty? s)) ;;1

(println (make-stack 1 2))

(import (.. lib queue))
(define q (make-queue))
(queue-push! q 1)
(queue-push! q 2)
(enqueue! q 4)
(enqueue! q 5)
(enqueue! q 6)
(queue-push! q 7)
(println q)
(println (queue-front q))
(println (queue-rear q))

(dequeue! q)
(dequeue! q)
(dequeue! q)
(dequeue! q)
(dequeue! q)
(dequeue! q)
(println q)

