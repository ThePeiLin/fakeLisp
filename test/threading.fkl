(define max 100)
(define buf (chanl 100))

(define (producer no.)
  (princ (format "producer no.%d start\n" no.))
  (do [(c 0 (1+ c))]
    [(>= c max)]
    (princ (format "producer no.%d: %d\n" no. c))
    (send buf c))
  (princ (format "producer no.%d exit\n" no.)))

(define (consumer no.)
  (princ (format "consumer no.%d start!\n" no.))
  (do [(c 0 (1+ c))]
    [(>= c max)]
    (princ (format "consumer no.%d: %d\n" no. (recv buf))))
  (princ (format "consumer no.%d exit\n")))

(define chanls '())

(do [(c 0 (1+ c))]
  [(>= c max)]
  (setq chanls
    (cons (go producer c)
          chanls))
  (setq chanls (cons (go consumer c) chanls)))

(foreach recv chanls)

