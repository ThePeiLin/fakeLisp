(import (.. lib ht))
(import (only (.. lib utils m) assert))

(define hash-table (make-ht equal-hashv equal))

(prin1n (ht-hashv hash-table))
(prin1n (ht-equal hash-table))

(ht-set! hash-table 'foo 'bar)
(ht-set! hash-table 'foo 'foobar)
(ht-set! hash-table 'bar 'barfoo)

(assert (eq (ht-set*! hash-table)
            hash-table))

(assert (equal (ht-set*! hash-table 'buzz 'fizz)
               'fizz))

(assert (equal (ht-set*! hash-table 'fizz 'buzz 114 514)
               514))

(println "\nht-ref 'foo\n")
(assert (eq (println (ht-ref hash-table 'foo))
            'foobar))

(println "\nht-ref 'foobar 'foofoo")
(assert (eq (println (ht-ref hash-table 'foobar 'foofoo))
            'foofoo))

(println "\nht-ref! 'foobar 'foofoo")
(assert (eq (println (ht-ref! hash-table 'foobar 'foofoo))
            'foofoo))

(println "\nht-ref! 'foobar 'barbar")
(assert (eq (println (ht-ref! hash-table 'foobar 'barbar))
            'foofoo))

(println "\nht-ref& 'foobar")
(assert (equal (println (ht-ref& hash-table 'foobar))
               #&foofoo))

(println "\nht-ref& 'foofoo")
(assert (eq (println (ht-ref& hash-table 'foofoo))
            '()))

(println "\nht-ref$ 'foobar")
(assert (equal (println (ht-ref$ hash-table 'foobar))
               '(foobar,foofoo)))

(println "\nht-ref$ 'foofoo")
(assert (eq (println (ht-ref$ hash-table 'foofoo))
            '()))

(println "\nbefore ht-del!")
(prin1n (ht->list hash-table))
(prin1n (ht-keys hash-table))
(prin1n (ht-values hash-table))

(println "\nht-del! 'foobar")
(assert (equal (println (ht-del! hash-table 'foobar))
               '(foobar,foofoo)))

(println "\nht-del! 'foofoo")
(assert (eq (println (ht-del! hash-table 'foofoo))
               '()))

(newline)
(println "before clear")
(prin1n (ht->list hash-table))
(prin1n (ht-keys hash-table))
(prin1n (ht-values hash-table))

(println "after clear")
(ht-clear! hash-table)
(prin1n (ht->list hash-table))
(prin1n (ht-keys hash-table))
(prin1n (ht-values hash-table))
